buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

plugins {
    id "de.undercouch.download" version "1.2"
}

import de.undercouch.gradle.tasks.download.Download

apply plugin: 'forge'

repositories {
    maven { 
		// The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven { 
		// the repo from which to get NEI and stuff
        name 'ChickenBones Repo'
        url "http://chickenbones.net/maven/"
    }
}

dependencies {
    // TODO Waila
    compile "codechicken:CodeChickenLib:1.7.10-1.1.1.99:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.4.29:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.3.77:dev"
}

ext.configFile = file "build.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = config.mod_version
group = "atomatic" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = project.getName()

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
	runDir = "run"
	
    replaceIn "reference/Reference.java"
    replace "@VERSION@", "${config.mod_version}.${config.build_number}"
}

version = "${config.minecraft_version}-${config.mod_version}.${config.build_number}"

processResources {
    // exclude xcf files, as they are for development only
    exclude '**/*.xcf'

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include '*.info'

        // replace version and mcversion
        expand 'mod_version': project.version, 'minecraft_version': project.config.minecraft_version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
    }
}

task devJar(type: Jar, dependsOn: 'classes') {
    from(sourceSets.main.output) {
        include '**'
    }

    extension = 'jar'
    classifier = 'dev'
}

artifacts {
    archives devJar
}

task getThaumcraft(type: Download, dependsOn: "extractUserDev") {
    onlyIf {
        !file("libs/Thaumcraft-deobf-1.7.10-4.2.2.0.jar").exists()
    }
    src 'https://dl.dropboxusercontent.com/u/47135879/Thaumcraft-deobf-1.7.10-4.2.2.0.jar'
    dest file("libs/Thaumcraft-deobf-1.7.10-4.2.2.0.jar")
    mustRunAfter "deobfBinJar"
    mustRunAfter "repackMinecraft"
}

task getBaubles(type: Download, dependsOn: "getThaumcraft") {
    onlyIf {
        !file("libs/Baubles-deobf-1.7.10-1.0.1.10.jar").exists()
    }
    src 'https://dl.dropboxusercontent.com/u/47135879/Baubles-deobf-1.7.10-1.0.1.10.jar'
    dest file("libs/Baubles-deobf-1.7.10-1.0.1.10.jar")
    mustRunAfter "deobfBinJar"
    mustRunAfter "repackMinecraft"
}

tasks.setupDevWorkspace.dependsOn getBaubles
tasks.setupDecompWorkspace.dependsOn getBaubles

task devBuild(dependsOn: ['build', 'reobf', 'devJar']) {
    doLast {
        logger.lifecycle "I think I'm done"
    }
}

task incrementBuildNumber(dependsOn: ['build', 'reobf', 'devJar']) {
    doLast {
        config.build_number = (config.build_number.toString().toInteger()) + 1
        configFile.withWriter {
            config.toProperties().store(it, "")
        }
    }
}

task release(dependsOn: 'incrementBuildNumber') {
    doLast {
        logger.lifecycle "I think I'm done"
    }
}
